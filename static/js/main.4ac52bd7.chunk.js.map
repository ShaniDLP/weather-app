{"version":3,"sources":["logo.svg","store/types.js","store/reducers/weatherReducer.js","store/reducers/index.js","store/store.js","store/actions/weatherActions.js","components/weeklyForecast.js","UI/externalLinks.js","components/favotires/favorites.js","components/search/search.js","components/weather.js","App.js","reportWebVitals.js","index.js"],"names":["CHANGE_CITY","UPDATE_FAVORITES","TOGGLE_PAGES","HIDE_ERROR","FETCH_AUTOCOMPLETE","FETCH_AUTOCOMPLETE_SUCCESS","FETCH_AUTOCOMPLETE_ERROR","FETCH_DAILY_WEATHER","FETCH_DAILY_WEATHER_SUCCESS","FETCH_DAILY_WEATHER_ERROR","FETCH_WEEKLY_WEATHER","FETCH_WEEKLY_WEATHER_SUCCESS","FETCH_WEEKLY_WEATHER_ERROR","initialState","loading","togglePages","query","cities","city_key","city_name","selectedKey","selectedCity","iconNumber","currentDailyTemp","currentWeeklyTemp","currentWeeklyForecast","displayFavorites","isSelectedInFavorites","showError","errorMessage","combineReducers","weatherList","state","action","type","searchOptions","payload","Name","Key","temp","icon","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","api_key","getWeather","dispatch","a","getState","fetchDailyWeather","fetchWeeklyWeather","key","axios","get","ApiService","data","Value","error","setTimeout","ApiServiceWeekly","days","WeeklyForecast","map","day","i","className","Date","getDay","src","Icon","slice","length","alt","externalLinks","href","id","faLinkedin","faGithubSquare","myFavorites","localStorage","getItem","JSON","parse","city","name","SearchBar","useDispatch","handleSubmit","handleSearch","event","target","value","then","response","updateOptions","optionalCities","onClick","LocalizedName","onSubmit","placeholder","onChange","Weather","useSelector","useEffect","iconUrl","faHome","faHeart","storedState","isFirst","stringify","setItem","newState","addSelectedCity","forEach","push","err","addToFavorites","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac52bd7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nexport const CHANGE_CITY = 'CHANGE_CITY';\r\nexport const UPDATE_FAVORITES = 'UPDATE_FAVORITES';\r\nexport const TOGGLE_PAGES = 'TOGGLE_PAGES';\r\nexport const HIDE_ERROR = 'HIDE_ERROR';\r\n\r\n///AUTOCOMPLETE:\r\nexport const FETCH_AUTOCOMPLETE = 'FETCH_AUTOCOMPLETE';\r\nexport const FETCH_AUTOCOMPLETE_SUCCESS = 'FETCH_AUTOCOMPLETE_SUCCESS';\r\nexport const FETCH_AUTOCOMPLETE_ERROR = 'FETCH_AUTOCOMPLETE_ERROR';\r\n\r\n//DAILY_WEATHER\r\nexport const FETCH_DAILY_WEATHER = 'FETCH_DAILY_WEATHER';\r\nexport const FETCH_DAILY_WEATHER_SUCCESS = 'FETCH_DAILY_WEATHER_SUCCESS';\r\nexport const FETCH_DAILY_WEATHER_ERROR = 'FETCH_DAILY_ERROR';\r\n\r\n//WEEKLY_WEATHER\r\nexport const FETCH_WEEKLY_WEATHER = 'FETCH_WEEKLY_WEATHER';\r\nexport const FETCH_WEEKLY_WEATHER_SUCCESS = 'FETCH_WEEKLY_WEATHER_SUCCESS';\r\nexport const FETCH_WEEKLY_WEATHER_ERROR = 'FETCH_WEEKLY_WEATHER_ERROR';\r\n\r\n","import {\r\n    CHANGE_CITY, FETCH_AUTOCOMPLETE, UPDATE_FAVORITES, FETCH_AUTOCOMPLETE_ERROR,\r\n    FETCH_AUTOCOMPLETE_SUCCESS, FETCH_DAILY_WEATHER, FETCH_DAILY_WEATHER_SUCCESS,\r\n    FETCH_DAILY_WEATHER_ERROR, FETCH_WEEKLY_WEATHER, FETCH_WEEKLY_WEATHER_SUCCESS,\r\n    FETCH_WEEKLY_WEATHER_ERROR, TOGGLE_PAGES, HIDE_ERROR\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    togglePages: false,\r\n    query: 'London',\r\n    cities: [],\r\n\r\n    city_key: \"328328\",\r\n    city_name: \"London\",\r\n\r\n    selectedKey: \"215854\",\r\n    selectedCity: 'Tel Aviv',\r\n    iconNumber: '01',\r\n    currentDailyTemp: '--',\r\n    currentWeeklyTemp: ['--'],\r\n    currentWeeklyForecast: [],\r\n    displayFavorites: false,\r\n    isSelectedInFavorites: false,\r\n    showError: false,\r\n    errorMessage: \"\"\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case FETCH_AUTOCOMPLETE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                searchOptions: action.payload\r\n            }\r\n\r\n        case FETCH_AUTOCOMPLETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                selectedCity: action.payload.Name,\r\n                selectedKey: action.payload.Key,\r\n                searchOptions: []\r\n            }\r\n\r\n        case FETCH_AUTOCOMPLETE_ERROR:\r\n            return {\r\n                loading: false,\r\n                showError: true,\r\n                errorMessage: action.payload\r\n            }\r\n\r\n        case CHANGE_CITY:\r\n            return {\r\n                ...state,\r\n                query: action.payload,\r\n                loading: false,\r\n            }\r\n\r\n        case UPDATE_FAVORITES:\r\n            return {\r\n                ...state,\r\n                isSelectedInFavorites: action.payload\r\n            }\r\n\r\n        case FETCH_DAILY_WEATHER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                currentDailyTemp: action.payload\r\n\r\n            }\r\n\r\n        case FETCH_DAILY_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentDailyTemp: action.payload.temp,\r\n                iconNumber: action.payload.icon,\r\n                loading: false\r\n            }\r\n\r\n        case FETCH_DAILY_WEATHER_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                showError: true,\r\n                errorMessage: action.payload\r\n            }\r\n\r\n        case FETCH_WEEKLY_WEATHER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case FETCH_WEEKLY_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentWeeklyForecast: action.payload,\r\n                loading: false\r\n            }\r\n\r\n        case FETCH_WEEKLY_WEATHER_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                showError: true,\r\n                errorMessage: action.payload \r\n            }\r\n\r\n        case TOGGLE_PAGES:\r\n            return {\r\n                ...state,\r\n                togglePages: action.payload\r\n            }\r\n\r\n        case HIDE_ERROR:\r\n            return {\r\n                ...state,\r\n                showError: false\r\n            }\r\n        \r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\nexport default combineReducers({\r\n  weatherList: weatherReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;\r\n","import { FETCH_DAILY_WEATHER, FETCH_DAILY_WEATHER_SUCCESS, FETCH_DAILY_WEATHER_ERROR, FETCH_WEEKLY_WEATHER, FETCH_WEEKLY_WEATHER_SUCCESS, FETCH_WEEKLY_WEATHER_ERROR, HIDE_ERROR } from '../types';\r\nimport axios from 'axios';\r\nimport store from \"../../store/store\";\r\n\r\n\r\nconst api_key = \"rzAhwl6AD6Bp1KAWrsATx65TUhWmms5K\";\r\nconst metric = true;\r\n\r\n\r\nconst ERROR_TIMEOUT = 5000;\r\n \r\nexport const getWeather = () => async dispatch => {\r\n    const { weatherList } = store.getState();\r\n    const { selectedKey } = weatherList;\r\n    \r\n    dispatch(fetchDailyWeather(selectedKey));\r\n    dispatch(fetchWeeklyWeather(selectedKey));\r\n}\r\n\r\nexport const fetchDailyWeather = (key) => async dispatch => {\r\n    const ApiService = await axios.get(\"https://dataservice.accuweather.com/currentconditions/v1/\" + key + \"?apikey=\" + api_key);\r\n    dispatch({\r\n        type: FETCH_DAILY_WEATHER\r\n    });\r\n    try{\r\n        dispatch({\r\n            type: FETCH_DAILY_WEATHER_SUCCESS,\r\n            payload: {\r\n                temp: ApiService.data[0]['Temperature']['Metric'].Value,\r\n                icon: ApiService.data[0]['WeatherIcon'] }\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: FETCH_DAILY_WEATHER_ERROR,\r\n            payload: error,\r\n        });\r\n        setTimeout(() => {dispatch({ type: HIDE_ERROR })}, ERROR_TIMEOUT);\r\n    }\r\n}\r\n\r\nexport const fetchWeeklyWeather = (key) => async dispatch => {\r\n    const ApiServiceWeekly = await axios.get(\"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\" + key + \"?apikey=\" + api_key  +\"&metric=\" + metric );\r\n    dispatch({\r\n        type: FETCH_WEEKLY_WEATHER\r\n    });\r\n    try {\r\n        dispatch({\r\n            type: FETCH_WEEKLY_WEATHER_SUCCESS,\r\n            payload: ApiServiceWeekly.data['DailyForecasts']\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: FETCH_WEEKLY_WEATHER_ERROR,\r\n            payload: error,\r\n        });\r\n        setTimeout(() => {dispatch({ type: HIDE_ERROR })}, ERROR_TIMEOUT);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './weather.css';\r\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nconst iconPadding = '00';\r\nconst WeeklyForecast = ({ data }) =>\r\n\r\n  <ul>\r\n    {data.map(\r\n      (day, i) =>\r\n        <div className=\"weatherItems\" key={i}>\r\n          <li>\r\n            <span className=\"forecastHeadline\">{days[new Date(day['Date']).getDay()]}</span>\r\n            <span className=\"temperature\">\r\n              {day['Temperature']['Maximum']['Value']}°\r\n            </span>\r\n            <div className=\"iconAndTemp\">\r\n              <span className=\"weeklyIcon\">\r\n                <img src={`https://developer.accuweather.com/sites/default/files/${(iconPadding+day['Day'].Icon).slice(-iconPadding.length)}-s.png`} alt=\"\" />\r\n              </span>\r\n            </div>\r\n          </li>\r\n        </div>)}\r\n  </ul>\r\n\r\n\r\nexport default WeeklyForecast;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './externalLinks.css';\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst externalLinks = () => {\r\n    return (\r\n        <div className=\"externalLinks\">\r\n        <a href = \"https://www.linkedin.com/in/shanip27\" id=\"linkedin\">\r\n        <FontAwesomeIcon icon={faLinkedin}/>\r\n        </a>\r\n         \r\n       \r\n        <a href=\"https://github.com/shanipj\" id=\"github\">\r\n        <FontAwesomeIcon icon={faGithubSquare}  />\r\n        </a>\r\n        </div>  \r\n    )}\r\n\r\nexport default externalLinks;\r\n\r\n","import React from 'react';\r\nimport '../weather.css';\r\nimport './favorites.css';\r\n\r\nconst myFavorites = () => {\r\n    let data = localStorage.getItem(\"state\");\r\n    if(!data) {\r\n        return ( <div id=\"favoritesContainer\">\r\n            There are no favorites at the moment\r\n        </div>);\r\n    }\r\n\r\n    data = JSON.parse(data);\r\n    \r\n    return (\r\n    <div id=\"favoritesContainer\">\r\n        <ul>\r\n            {data.map(\r\n                (city, i) =>\r\n                    <li className=\"weatherItems\" key={i}>\r\n                        <span className=\"forecastHeadline\"> {city.name}</span>\r\n                        <div className=\"iconAndTemp\">\r\n                            <span className=\"weeklyIcon\"></span>\r\n                        </div>\r\n                    </li>\r\n            )}\r\n        </ul>\r\n    </div>);\r\n}\r\n\r\nexport default myFavorites;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport store from \"../../store/store\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { getWeather } from '../../store/actions/weatherActions'\r\nimport { FETCH_AUTOCOMPLETE, FETCH_AUTOCOMPLETE_SUCCESS } from '../../store/types';\r\nimport \"./search.css\";\r\n\r\nconst api_key = \"rzAhwl6AD6Bp1KAWrsATx65TUhWmms5K\";\r\n\r\nfunction SearchBar() {\r\n  const dispatch = useDispatch();\r\n  const { weatherList } = store.getState();\r\n  const { searchOptions } = weatherList;\r\n\r\n  const handleSubmit = (key, name) => {\r\n    dispatch({\r\n      type: FETCH_AUTOCOMPLETE_SUCCESS,\r\n      payload: {Key: key, Name: name}\r\n    });\r\n    dispatch(getWeather());\r\n  };\r\n\r\n  const handleQueryChange = (event) => {\r\n    handleSearch(event.target.value);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    let query = event.target.value;\r\n    if (query.length < 3) {\r\n      dispatch({\r\n        type: FETCH_AUTOCOMPLETE,\r\n        payload: [] \r\n      });\r\n      return;\r\n    }\r\n    axios\r\n      .get(\r\n        \"https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=\" + api_key + \"&q=\" + query\r\n      )\r\n      .then((response) => updateOptions(response.data));\r\n  };\r\n\r\n  const updateOptions = (cities) => {\r\n    if (cities.length <= 0) {\r\n      return;\r\n    }\r\n\r\n    const optionalCities = cities.map((city) => (\r\n      <div\r\n        key={city.Key}\r\n        onClick={() => handleSubmit(city.Key, city.LocalizedName)}>\r\n        {city.LocalizedName}\r\n      </div>\r\n    ));\r\n\r\n    dispatch({\r\n      type: FETCH_AUTOCOMPLETE,\r\n      payload: optionalCities\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"searchBar\">\r\n      <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" placeholder=\"Search City\" onChange={handleSearch} id=\"searchinput\" />\r\n      </form>\r\n      <div id=\"searchWrapper\">\r\n        <div id=\"searchResult\">{searchOptions}</div>\r\n      </div>\r\n      </div>\r\n      );\r\n    }\r\nexport default SearchBar;","import React, {  useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getWeather } from '../store/actions/weatherActions'\r\nimport {  UPDATE_FAVORITES, TOGGLE_PAGES } from '../store/types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudSun, faHeart, faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport WeeklyForecast from './weeklyForecast';\r\nimport ExternalLinks from '../UI/externalLinks';\r\nimport './weather.css';\r\nimport MyFavorites from './favotires/favorites';\r\nimport Search from './search/search';\r\n\r\nconst Weather = () => {\r\n    const dispatch = useDispatch();\r\n    const weatherList = useSelector(state => state.weatherList);\r\n    const { loading, selectedKey, selectedCity, currentDailyTemp, showError, errorMessage, iconNumber, togglePages, isSelectedInFavorites, currentWeeklyForecast } = weatherList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getWeather())\r\n    }, [dispatch]);\r\n\r\n    const addToFavorites = () => {\r\n        try {\r\n            const storedState = localStorage.getItem(\"state\");\r\n            let isFirst = false;\r\n\r\n            if (!storedState) { \r\n                const state = [{key: selectedKey, name: selectedCity }];\r\n                const storedState = JSON.stringify(state);\r\n                localStorage.setItem(\"state\", storedState);\r\n\r\n                isFirst = true;\r\n            }\r\n            \r\n            if(isFirst) {\r\n                return;\r\n            }\r\n\r\n            let newState = [];\r\n            let addSelectedCity = true;\r\n            const tempState = JSON.parse(storedState);\r\n\r\n \r\n            tempState.forEach((data) => {\r\n                data.key != selectedKey ?\r\n                    newState.push(data) :\r\n                    addSelectedCity = false; \r\n                });\r\n\r\n            if(addSelectedCity) {\r\n               \r\n                newState.push({key: selectedKey, name: selectedCity });\r\n                \r\n            }\r\n            \r\n            localStorage.setItem(\"state\", JSON.stringify(newState));  \r\n\r\n            dispatch({\r\n                type: UPDATE_FAVORITES,\r\n                payload: addSelectedCity\r\n            })\r\n\r\n        } catch(err) {\r\n         \r\n            return;\r\n        }\r\n    }\r\n\r\n    const showHome = () => {\r\n        dispatch({\r\n            type: TOGGLE_PAGES,\r\n            payload: false\r\n        });\r\n    }\r\n\r\n    const showFavorites = () => {\r\n        dispatch({\r\n            type: TOGGLE_PAGES,\r\n            payload: true\r\n        });\r\n    }\r\n\r\n    let iconUrl = `https://developer.accuweather.com/sites/default/files/${iconNumber}-s.png`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mainPage\">\r\n                <header>\r\n                    <span onClick={() => showHome()}>\r\n                        <span> <FontAwesomeIcon icon={faHome} /></span>\r\n                        <span className=\"navbar\">Home</span>\r\n                    </span>\r\n                    <span onClick={() => showFavorites()}>\r\n                        <span> <FontAwesomeIcon icon={faHeart} /></span>\r\n                        <span className=\"navbar\">My Favorites </span>\r\n                    </span>\r\n                \r\n                </header>\r\n                \r\n                \r\n                <div className={togglePages ? \"hide\" : \"show\"}> \r\n                    <Search/>\r\n\r\n                    <div className=\"dailyWeather\">\r\n                        <span id=\"cityName\">\r\n                            {selectedCity}\r\n                        </span>\r\n                        <div className=\"addFavorite\">\r\n                            <FontAwesomeIcon icon={faHeart} className={isSelectedInFavorites ? \"inFavorites\" : \"\"} onClick={() => addToFavorites()} />\r\n                        </div>\r\n                        <div id=\"currentDailyTemp\">\r\n                            <span>\r\n                                {currentDailyTemp}°\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"icon\">\r\n                            <img src={iconUrl} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"clear\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"weeklyWeather\">\r\n                        <WeeklyForecast data={currentWeeklyForecast} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={togglePages ? \"show\" : \"hide\"}>\r\n                    <MyFavorites/>\r\n                </div>\r\n\r\n                <ExternalLinks />\r\n\r\n                <div id=\"errorWrapper\">\r\n                    <div id=\"errorToast\" className={showError ? \"show\" : \"\"}>\r\n                        {errorMessage}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Weather;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Weather from './components/weather';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}